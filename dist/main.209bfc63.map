{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","removeX","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","console","log","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,YAAYC,EAAE,WAAF,CAAlB;AACA,IAAMC,UAAUF,UAAUG,IAAV,CAAe,SAAf,CAAhB;AACA,IAAMC,IAAIC,aAAaC,OAAb,CAAqB,GAArB,CAAV;AACA,IAAMC,UAAUC,KAAKC,KAAL,CAAWL,CAAX,CAAhB,EAAgC;;AAEhC,IAAMM,UAAUH,WAAW,CACvB,EAAEI,MAAK,GAAP,EAAYC,KAAI,sBAAhB,EADuB,EAEvB,EAAED,MAAK,GAAP,EAAYC,KAAI,0BAAhB,EAFuB,CAA3B;AAIA,IAAMC,UAAU,SAAVA,OAAU,CAACD,GAAD,EAAQ;AACtB,SAAOA,IAAIE,OAAJ,CAAY,UAAZ,EAAuB,EAAvB,EACNA,OADM,CACE,SADF,EACY,EADZ,EAENA,OAFM,CAEE,MAFF,EAES,EAFT,EAGNA,OAHM,CAGE,MAHF,EAGS,EAHT,EAINA,OAJM,CAIE,KAJF,EAIQ,EAJR,EAKNA,OALM,CAKE,MALF,EAKS,EALT,CAAP,CADsB,CAMI;AAC3B,CAPD;AAQA,IAAMC,SAAS,SAATA,MAAS,GAAK;AAChBf,YAAUG,IAAV,CAAe,eAAf,EAAgCa,MAAhC;AACAN,UAAQO,OAAR,CAAgB,UAACC,IAAD,EAAMC,KAAN,EAAc;AAC1B,QAAMC,MAAMnB,yEAEYiB,KAAKP,IAFjB,uDAGYE,QAAQK,KAAKN,GAAb,CAHZ,kNAUNS,YAVM,CAUOnB,OAVP,CAAZ;AAWFkB,QAAIE,EAAJ,CAAO,OAAP,EAAe,YAAI;AACjBC,aAAOC,IAAP,CAAYN,KAAKN,GAAjB;AACD,KAFD;AAGAQ,QAAIE,EAAJ,CAAO,OAAP,EAAe,QAAf,EAAwB,UAACG,CAAD,EAAM;AAC5BC,cAAQC,GAAR,CAAY,IAAZ;AACEF,QAAEG,eAAF,GAF0B,CAEJ;AACtBlB,cAAQmB,MAAR,CAAeV,KAAf,EAAqB,CAArB,EAH0B,CAGD;AACzBJ;AACH,KALD;AAMD,GArBD;AAsBH,CAxBD;AAyBAA;;AAEAd,EAAE,YAAF,EAAgBqB,EAAhB,CAAmB,OAAnB,EAA4B,YAAM;AACjC,MAAIV,MAAMW,OAAOO,MAAP,CAAc,cAAd,CAAV;AACG,MAAGlB,IAAImB,OAAJ,CAAY,MAAZ,MAAuB,CAA1B,EAA4B;AACxBnB,UAAM,aAAaA,GAAnB;AACH;AACDc,UAAQC,GAAR,CAAYf,GAAZ;AACAF,UAAQsB,IAAR,CAAa;AACTrB,UAAME,QAAQD,GAAR,EAAa,CAAb,EAAgBqB,WAAhB,EADG,EAC8B;AACvCrB,SAAKA;AAFI,GAAb;AAIAG;AACH,CAXD;AAYAQ,OAAOW,cAAP,GAAwB,YAAI;AACxB,MAAMC,SAAS3B,KAAK4B,SAAL,CAAe1B,OAAf,CAAf,CADwB,CACe;AACvCL,eAAagC,OAAb,CAAqB,GAArB,EAAyBF,MAAzB;AACH,CAHD;AAIAlC,EAAEqC,QAAF,EAAYhB,EAAZ,CAAe,UAAf,EAA2B,UAACG,CAAD,EAAO;AAAA,MACzBc,GADyB,GAClBd,CADkB,CACzBc,GADyB;;AAEhC,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI9B,QAAQ+B,MAA5B,EAAoCD,GAApC,EAAyC;AACvC,QAAI9B,QAAQ8B,CAAR,EAAW7B,IAAX,CAAgB+B,WAAhB,OAAkCH,GAAtC,EAA2C;AAAI;AAC7ChB,aAAOC,IAAP,CAAYd,QAAQ8B,CAAR,EAAW5B,GAAvB;AACD;AACF;AACF,CAPD,GAO6B","file":"main.209bfc63.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last')\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)   //字符串变成对象\r\n\r\nconst hashMap = xObject || [\r\n    { logo:'A', url:'https://www.acfun.cn'},\r\n    { logo:'B', url:'https://www.bilibili.com'}   \r\n]\r\nconst removeX = (url) =>{\r\n  return url.replace('https://','')\r\n  .replace('http://','')\r\n  .replace('www.','')\r\n  .replace('.com','')\r\n  .replace('.cn','') \r\n  .replace(/\\/.*/,'')       //删除 /开头的内容\r\n}\r\nconst render = () =>{\r\n    $siteList.find('li:not(.last)').remove()\r\n    hashMap.forEach((node,index)=>{\r\n        const $li = $(`<li>\r\n          <div class=\"site\">\r\n            <div class=\"logo\">${node.logo}</div>         \r\n            <div class=\"link\">${removeX(node.url)}</div>\r\n            <div class=\"close\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"#icon-close\"></use>\r\n              </svg>\r\n            </div>\r\n          </div>   \r\n      </li>`).insertBefore($lastLi)\r\n      $li.on('click',()=>{\r\n        window.open(node.url)\r\n      })\r\n      $li.on('click','.close',(e) =>{\r\n        console.log('这里')\r\n          e.stopPropagation()   //阻止冒泡\r\n          hashMap.splice(index,1)  //删除一个此网站\r\n          render()\r\n      })\r\n    })\r\n}\r\nrender()\r\n\r\n$(\".addButton\").on(\"click\", () => {\r\n let url = window.prompt(\"请问你要添加的网址是啥？\");\r\n    if(url.indexOf('http')!== 0){\r\n        url = 'https://' + url\r\n    }\r\n    console.log(url)\r\n    hashMap.push({\r\n        logo: removeX(url)[0].toUpperCase(),   //toUpperCase将字母变成大写    \r\n        url: url\r\n    })\r\n    render()\r\n});\r\nwindow.onbeforeunload = ()=>{\r\n    const string = JSON.stringify(hashMap) //把对象变成字符串\r\n    localStorage.setItem('x',string)\r\n}\r\n$(document).on('keypress', (e) => {\r\n  const {key} = e\r\n  for (let i = 0; i < hashMap.length; i++) {\r\n    if (hashMap[i].logo.toLowerCase() === key) {   //toLowerCase把字母变成小写\r\n      window.open(hashMap[i].url)\r\n    }\r\n  }\r\n})                           //鼠标监听事件： 如果我的key===hashMap的第一个字符，则打开相应的网址"]}